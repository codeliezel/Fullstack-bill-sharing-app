{"version":3,"sources":["../../src/models/index.js"],"names":["basename","path","__filename","env","process","NODE_ENV","config","envConfigs","db","sequelize","url","Sequelize","database","username","password","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAGC,iBAAKD,QAAL,CAAcE,UAAd,CAAjB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,MAAM,GAAGC,oBAAWJ,GAAX,CAAf;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,GAAX,EAAgB;AACdD,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcL,MAAM,CAACI,GAArB,EAA0BJ,MAA1B,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcL,MAAM,CAACM,QAArB,EAA+BN,MAAM,CAACO,QAAtC,EAAgDP,MAAM,CAACQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAEDS,eAAGC,WAAH,CAAeC,SAAf,EACGC,MADH,CAEI,UAACC,IAAD;AAAA,SAAUA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAKnB,QAApC,IAAgDmB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA7E;AAAA,CAFJ,EAIGC,OAJH,CAIW,UAACH,IAAD,EAAU;AACjB,MAAMI,KAAK,GAAGd,SAAS,UAAT,CAAiBR,iBAAKuB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAX,EAAAA,EAAE,CAACe,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CAPH;;AAQAG,MAAM,CAACC,IAAP,CAAYnB,EAAZ,EAAgBc,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIpB,EAAE,CAACoB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BrB,IAAAA,EAAE,CAACoB,SAAD,CAAF,CAAcC,SAAd,CAAwBrB,EAAxB;AACD;AACF,CAJD;AAKAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,qBAAf;AACAmB,MAAM,CAACC,OAAP,GAAiBvB,EAAjB","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport 'dotenv/config';\nimport envConfigs from '../config/config';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = envConfigs[env];\nconst db = {};\n\nlet sequelize;\nif (config.url) {\n  sequelize = new Sequelize(config.url, config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname)\n  .filter(\n    (file) => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js',\n  )\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;\n"],"file":"index.js"}