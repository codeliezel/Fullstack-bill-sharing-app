{"version":3,"sources":["../../src/models/2-groups.js"],"names":["sequelize","DataTypes","Group","define","userId","type","STRING","allowNull","references","model","key","unique","onUpdate","onDelete","name","category","ENUM","groupBalance","FLOAT","defaultValue","goalBalance","emails","ARRAY","description","associate","models","belongsTo","Users","as","foreignKey"],"mappings":";;;;;;;eAAe,kBAACA,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,OADG;AAEVC,QAAAA,GAAG,EAAE;AAFK,OAHN;AAONC,MAAAA,MAAM,EAAE,KAPF;AAQNC,MAAAA,QAAQ,EAAE,SARJ;AASNC,MAAAA,QAAQ,EAAE;AATJ,KAD+B;AAYvCC,IAAAA,IAAI,EAAE;AACJT,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAZiC;AAgBvCQ,IAAAA,QAAQ,EAAE;AACRV,MAAAA,IAAI,EAAEJ,SAAS,CAACe,IAAV,CAAe,OAAf,EAAwB,QAAxB,EAAkC,WAAlC,EAA+C,YAA/C,CADE;AAERT,MAAAA,SAAS,EAAE;AAFH,KAhB6B;AAoBvCU,IAAAA,YAAY,EAAE;AACZZ,MAAAA,IAAI,EAAEJ,SAAS,CAACiB,KADJ;AAEZC,MAAAA,YAAY,EAAE,CAFF;AAGZZ,MAAAA,SAAS,EAAE;AAHC,KApByB;AAyBvCa,IAAAA,WAAW,EAAE;AACXf,MAAAA,IAAI,EAAEJ,SAAS,CAACiB,KADL;AAEXX,MAAAA,SAAS,EAAE;AAFA,KAzB0B;AA6BvCc,IAAAA,MAAM,EAAE;AACNhB,MAAAA,IAAI,EAAEJ,SAAS,CAACqB,KAAV,CAAgBrB,SAAS,CAACK,MAA1B,CADA;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNI,MAAAA,MAAM,EAAE;AAHF,KA7B+B;AAkCvCY,IAAAA,WAAW,EAAE;AACXlB,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADL;AAEXC,MAAAA,SAAS,EAAE;AAFA;AAlC0B,GAA3B,CAAd;;AAuCAL,EAAAA,KAAK,CAACsB,SAAN,GAAkB,UAACC,MAAD,EAAY;AAC5BvB,IAAAA,KAAK,CAACwB,SAAN,CAAgBD,MAAM,CAACE,KAAvB,EAA8B;AAAEC,MAAAA,EAAE,EAAE,qBAAN;AAA6BC,MAAAA,UAAU,EAAE;AAAzC,KAA9B;AACD,GAFD;;AAGA,SAAO3B,KAAP;AACD,C","sourcesContent":["export default (sequelize, DataTypes) => {\n  const Group = sequelize.define('Groups', {\n    userId: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      references: {\n        model: 'Users',\n        key: 'id',\n      },\n      unique: false,\n      onUpdate: 'CASCADE',\n      onDelete: 'CASCADE',\n    },\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false,\n    },\n    category: {\n      type: DataTypes.ENUM('Trips', 'Movies', 'Functions', 'Home Bills'),\n      allowNull: false,\n    },\n    groupBalance: {\n      type: DataTypes.FLOAT,\n      defaultValue: 0,\n      allowNull: false,\n    },\n    goalBalance: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n    emails: {\n      type: DataTypes.ARRAY(DataTypes.STRING),\n      allowNull: false,\n      unique: false,\n    },\n    description: {\n      type: DataTypes.STRING,\n      allowNull: false,\n    },\n  });\n  Group.associate = (models) => {\n    Group.belongsTo(models.Users, { as: 'GroupsCreatedByUser', foreignKey: 'userId' });\n  };\n  return Group;\n};\n"],"file":"2-groups.js"}