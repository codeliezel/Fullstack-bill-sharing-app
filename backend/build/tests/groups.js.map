{"version":3,"sources":["../../src/tests/groups.js"],"names":["expect","chai","use","chaiHttp","login","email","password","sinonChai","request","describe","before","app","keepOpen","afterEach","sinon","restore","after","close","it","done","post","set","send","end","logError","logResponse","token","body","name","category","emails","description","goalBalance","err","res","status","to","be","equal","get","patch","balance","groupBalance","amount"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport sinon from 'sinon';\nimport sinonChai from 'sinon-chai';\nimport app from '../app';\n\nconst { expect } = chai;\nchai.use(chaiHttp);\n\nconst login = {\n  email: 'francis@gmail.com',\n  password: '12345',\n};\nchai.use(sinonChai);\n\nlet request;\ndescribe('Test for groups', () => {\n  before(async () => {\n    request = chai.request(app).keepOpen();\n  });\n  afterEach(() => sinon.restore());\n  after(() => request.close());\n  describe('Groups test', () => {\n    it('it should return 201 when a user tries create a group', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .post('/api/v1/create-group')\n            .set('Authorization', token)\n            .send({\n              name: 'Movers',\n              category: 'Functions',\n              emails: ['ufuoma@gmail.com', 'francis@gmail.com'],\n              description: 'let us go somewhere.',\n              goalBalance: '1000',\n            })\n            .end((err, res) => {\n              expect(res.status).to.be.equal(201);\n              done();\n            });\n        });\n    });\n    it('it should return 200 when a user tries get all groups', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .get('/api/v1/groups')\n            .set('Authorization', token)\n            .end((err, res) => {\n              expect(res.status).to.be.equal(200);\n              done();\n            });\n        });\n    });\n    it('it should return 200 when a user tries get a group', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .get('/api/v1/group/44ccf572-44bd-405d-90a6-3c9e6c937ce1')\n            .set('Authorization', token)\n            .end((err, res) => {\n              expect(res.status).to.be.equal(200);\n              done();\n            });\n        });\n    });\n    it('it should return 200 when a user tries to update a group', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .patch('/api/v1/group/44ccf572-44bd-405d-90a6-3c9e6c937ce1')\n            .set('Authorization', token)\n            .send({\n              name: 'Movers',\n              category: 'Functions',\n              emails: ['ufuoma@gmail.com', 'francis@gmail.com'],\n              description: 'let us go somewhere.',\n              goalBalance: '2000',\n            })\n            .end((err, res) => {\n              expect(res.status).to.be.equal(200);\n              done();\n            });\n        });\n    });\n    it('it should return 200 when a user tries to get groups they are part of', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .get('/api/v1/group?email=francis@gmail.com')\n            .set('Authorization', token)\n            .end((err, res) => {\n              expect(res.status).to.be.equal(200);\n              done();\n            });\n        });\n    });\n    it('it should return 200 when a user tries to deposit money to group', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .patch('/api/v1/group/add-money/44ccf572-44bd-405d-90a6-3c9e6c937ce1')\n            .set('Authorization', token)\n            .send({\n              balance: 5000.00,\n              goalBalance: 2000.00,\n              groupBalance: 700.00,\n              amount: 400.00,\n            })\n            .end((err, res) => {\n              expect(res.status).to.be.equal(200);\n              done();\n            });\n        });\n    });\n    it('it should return 204 when a user tries to delete a group', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signin')\n        .set('Accept', 'application/json')\n        .send(login)\n        .end((logError, logResponse) => {\n          const token = `Bearer ${logResponse.body.token}`;\n          chai.request(app)\n            .delete('/api/v1/group/44ccf572-44bd-405d-90a6-3c9e6c937ce1')\n            .set('Authorization', token)\n            .end((err, res) => {\n              expect(res.status).to.be.equal(204);\n              done();\n            });\n        });\n    });\n  });\n});\n"],"file":"groups.js"}